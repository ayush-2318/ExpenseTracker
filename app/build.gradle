/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    lombokVersion = "1.18.30"
}

dependencies {
    // Use JUnit test framework.
//    testImplementation libs.junit
//
//    // This dependency is used by the application.
//    implementation libs.guava
//
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.1.1'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.modelmapper:modelmapper:3.2.0'
//    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
//    implementation group: 'org.projectlombok', name:'lombok', version: "$lombokVersion"
//    compileOnly group: 'org.projectlombok', name:'lombok', version: "$lombokVersion"
//    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "$lombokVersion"
//    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "$lombokVersion"
//    testImplementation group: 'org.projectlombok', name: 'lombok', version: "$lombokVersion"
//    implementation 'org.springframework.boot:spring-boot-starter'
//    implementation 'mysql:mysql-connector-java'
//    implementation 'org.springframework.kafka:spring-kafka:3.1.1'




        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0' // Or your preferred JUnit version

        implementation 'com.google.guava:guava:33.0.0-jre' // Or whatever version you want

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.1.1'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.modelmapper:modelmapper:3.2.0'
        implementation 'org.springframework.kafka:spring-kafka:3.1.1'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'mysql:mysql-connector-java:8.0.33'

        implementation "org.projectlombok:lombok:$lombokVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testImplementation "org.projectlombok:lombok:$lombokVersion"


}

// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
